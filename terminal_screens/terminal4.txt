[student@master ~]$ python3.12 -m pip install unittest2pytest
Defaulting to user installation because normal site-packages is not writeable
Collecting unittest2pytest
  Obtaining dependency information for unittest2pytest from https://files.pythonhosted.org/packages/06/79/4ee8f18ce02c0910bde07c0651449da572a13e6c8a38b1e0a9fdfc66fab5/unittest2pytest-0.4-py2.py3-none-any.whl.metadata
  Downloading unittest2pytest-0.4-py2.py3-none-any.whl.metadata (5.1 kB)
Downloading unittest2pytest-0.4-py2.py3-none-any.whl (15 kB)
Installing collected packages: unittest2pytest
Successfully installed unittest2pytest-0.4
[student@master ~]$ cd eclipse-python-workspace/PythonUnitTest2PyTest/src/test/python/
[student@master python]$ ls -l
total 4
-rw-r--r-- 1 student student   0 Mar 12 12:46 __init__.py
drwxr-xr-x 2 student student 100 Mar 12 12:50 __pycache__
-rw-r--r-- 1 student student 442 Mar 12 12:50 test_function4Unit2PyTest.py
[student@master python]$ unittest2pytest test_function4Unit2PyTest.py 
RefactoringTool: Refactored test_function4Unit2PyTest.py
--- test_function4Unit2PyTest.py	(original)
+++ test_function4Unit2PyTest.py	(refactored)
@@ -9,10 +9,10 @@
 class Test(unittest.TestCase):
 
     def test_factorial(self):
-        self.assertEqual(function4Unit2PyTest.factorial(5), 120)
+        assert function4Unit2PyTest.factorial(5) == 120
 
     def test_is_leap_year(self):
-        self.assertEqual(function4Unit2PyTest.is_leap_year(2002), False)
+        assert function4Unit2PyTest.is_leap_year(2002) == False
 
 if __name__ == "__main__":
     #import sys;sys.argv = ['', 'Test.testName']
RefactoringTool: Files that need to be modified:
RefactoringTool: test_function4Unit2PyTest.py
[student@master python]$ ls -l
total 4
-rw-r--r-- 1 student student   0 Mar 12 12:46 __init__.py
drwxr-xr-x 2 student student 100 Mar 12 12:50 __pycache__
-rw-r--r-- 1 student student 442 Mar 12 12:50 test_function4Unit2PyTest.py
[student@master python]$ unittest2pytest -w test_function4Unit2PyTest.py 
RefactoringTool: Refactored test_function4Unit2PyTest.py
--- test_function4Unit2PyTest.py	(original)
+++ test_function4Unit2PyTest.py	(refactored)
@@ -9,10 +9,10 @@
 class Test(unittest.TestCase):
 
     def test_factorial(self):
-        self.assertEqual(function4Unit2PyTest.factorial(5), 120)
+        assert function4Unit2PyTest.factorial(5) == 120
 
     def test_is_leap_year(self):
-        self.assertEqual(function4Unit2PyTest.is_leap_year(2002), False)
+        assert function4Unit2PyTest.is_leap_year(2002) == False
 
 if __name__ == "__main__":
     #import sys;sys.argv = ['', 'Test.testName']
RefactoringTool: Files that were modified:
RefactoringTool: test_function4Unit2PyTest.py
[student@master python]$ ls -l
total 8
-rw-r--r-- 1 student student   0 Mar 12 12:46 __init__.py
drwxr-xr-x 2 student student 100 Mar 12 12:50 __pycache__
-rw-r--r-- 1 student student 424 Mar 12 13:30 test_function4Unit2PyTest.py
-rw-r--r-- 1 student student 442 Mar 12 12:50 test_function4Unit2PyTest.py.bak
[student@master python]$ diff test_function4Unit2PyTest.py test_function4Unit2PyTest.py.bak
12c12
<         assert function4Unit2PyTest.factorial(5) == 120
---
>         self.assertEqual(function4Unit2PyTest.factorial(5), 120)
15c15
<         assert function4Unit2PyTest.is_leap_year(2002) == False
---
>         self.assertEqual(function4Unit2PyTest.is_leap_year(2002), False)
[student@master python]$ ^C
[student@master python]$ 

